ext {
  def Properties props = new Properties()
  props.load(new FileInputStream(file('local.properties')))

  android = [
      sdk   : props["sdk.dir"],
      target: "android-24"
  ]

  androidAptVersion = '1.8'
  androidGradleVersion = '2.2.0'
  androidSupportLibsVersion = '24.2.1'
  androidVersion = '4.0.1.2' // do not increment!
  autoServiceVersion = '1.0-rc2'
  autoValueVersion = '1.3'
  autoValueAnnotationsVersion = '1.3'
  autoValueParcelVersion = '0.2.4-rc2'
  bintrayGradlePluginVersion = '1.3.1'
  daggerVersion = '1.2.2'
  googleCompileTestingVersion = '0.6'
  guavaVersion = '19.0'
  jacksonVersion = '2.6.2'
  javapoetVersion = '1.7.0'
  javassistVersion = '3.20.0-GA'
  junitVersion = '4.12'
  kotlinVersion = '1.0.4'
  lombokVersion = '1.14.8' // do not increment!
  mockitoVersion = '1.10.19'
  rxJavaMathVersion = '1.0.0'
  rxJavaVersion = '1.2.0'
  supportTestRunnerVersion = '0.5'
  truthVersion = '0.30'
  ztZipVersion = '1.9'

  libraries = [
      android                     : files("${android.sdk}/platforms/${android.target}/android.jar"),
      androidApt                  : "com.neenbedankt.gradle.plugins:android-apt:${androidAptVersion}",
      androidGradle               : "com.android.tools.build:gradle:${androidGradleVersion}",
      autoService                 : "com.google.auto.service:auto-service:${autoServiceVersion}",
      autoValue                   : "com.google.auto.value:auto-value:${autoValueVersion}",
      autoValueAnnotations        : "com.jakewharton.auto.value:auto-value-annotations:${autoValueAnnotationsVersion}",
      autoValueParcel             : "com.ryanharter.auto.value:auto-value-parcel:${autoValueParcelVersion}",
      bintrayGradlePlugin         : "com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintrayGradlePluginVersion}",
      dagger                      : "com.squareup.dagger:dagger:${daggerVersion}",
      daggerCompiler              : "com.squareup.dagger:dagger-compiler:${daggerVersion}",
      guava                       : "com.google.guava:guava:${guavaVersion}",
      jackson                     : "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
      javapoet                    : "com.squareup:javapoet:${javapoetVersion}",
      javassist                   : "org.javassist:javassist:$javassistVersion",
      kotlinGradlePlugin          : "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}",
      kotlinReflect               : "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}",
      kotlinStdLib                : "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
      lombok                      : "org.projectlombok:lombok:${lombokVersion}",
      mockito                     : "org.mockito:mockito-core:$mockitoVersion",
      rxJava                      : "io.reactivex:rxjava:${rxJavaVersion}",
      rxJavaMath                  : "io.reactivex:rxjava-math:${rxJavaMathVersion}",
      supportAnnotations          : files("${android.sdk}/extras/android/support/annotations/android-support-annotations.jar"),
      supportAnnotationsForTesting: "com.android.support:support-annotations:$androidSupportLibsVersion",
      supportV7                   : "com.android.support:appcompat-v7:${androidSupportLibsVersion}",
      supportTestRunner           : "com.android.support.test:runner:${supportTestRunnerVersion}",
      ztZip                       : "org.zeroturnaround:zt-zip:$ztZipVersion",

      // testing
      googleCompileTesting        : "com.google.testing.compile:compile-testing:${googleCompileTestingVersion}",
      junit                       : "junit:junit:${junitVersion}",
      truth                       : "com.google.truth:truth:${truthVersion}",
  ]
}