apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'sqlitemagic'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "com.siimkinks.sqlitemagic"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"

    buildConfigField "int", "DB_VERSION", "3"
    buildConfigField "String", "DB_NAME", '"db.db"'

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      minifyEnabled false
    }
    release {
      buildConfigField "int", "DB_VERSION", "2"

      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  sourceSets {
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
  }
  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation libraries.kotlinStdLib
  implementation libraries.kotlinReflect
  implementation libraries.sqlitemagicRuntime
  implementation libraries.supportV7
  implementation libraries.rxJava2
  implementation libraries.rxJava2Extensions

  compileOnly libraries.autoValueAnnotations
  compileOnly libraries.lombok
  compileOnly libraries.sqlitemagicAnnotations

  annotationProcessor libraries.autoValue
  annotationProcessor libraries.autoValueParcel
  annotationProcessor libraries.sqlitemagicProcessorMagic

  testImplementation libraries.kotlinJunit
  testImplementation libraries.kotlinStdLib
  testImplementation libraries.kotlinReflect
  testImplementation libraries.mockito
  testImplementation libraries.truth

  testCompileOnly libraries.lombok

  testAnnotationProcessor libraries.lombok

  androidTestImplementation libraries.supportAnnotationsForTesting
  androidTestImplementation libraries.supportTestRunner
  androidTestImplementation(libraries.truth) {
    exclude group: 'junit' // Android has JUnit built in.
  }
}

sqlitemagic {
  configureAutomatically = false
//  generateMagicMethods = false
//	generateLogging = true
//	debugBytecodeProcessor = true
}

tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
}