apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'sqlitemagic'

android {
  compileSdkVersion 26
  buildToolsVersion "26.0.1"

  defaultConfig {
    applicationId "com.siimkinks.sqlitemagic"
    minSdkVersion 16
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"

    buildConfigField "int", "DB_VERSION", "3"
    buildConfigField "String", "DB_NAME", '"db.db"'

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      minifyEnabled false
    }
    release {
      buildConfigField "int", "DB_VERSION", "2"

      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  sourceSets {
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
  }
  lintOptions {
    abortOnError false
  }
}

dependencies {
  compile libraries.kotlinStdLib
  compile libraries.kotlinReflect
  compile libraries.sqlitemagicRuntime
  compile libraries.supportV7
  compile libraries.rxJava2
  compile libraries.rxJava2Extensions

  provided libraries.autoValueAnnotations
  provided libraries.lombok
  provided libraries.sqlitemagicAnnotations

  annotationProcessor libraries.autoValue
  annotationProcessor libraries.autoValueParcel
  annotationProcessor libraries.sqlitemagicProcessorMagic

  testCompile libraries.kotlinJunit
  testCompile libraries.kotlinStdLib
  testCompile libraries.kotlinReflect
  testCompile libraries.mockito
  testCompile libraries.truth

  androidTestCompile libraries.supportAnnotationsForTesting
  androidTestCompile libraries.supportTestRunner
  androidTestCompile(libraries.truth) {
    exclude group: 'junit' // Android has JUnit built in.
  }
}

sqlitemagic {
  configureAutomatically = false
//  generateMagicMethods = false
//	generateLogging = true
//	debugBytecodeProcessor = true
}

tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
}